import { z } from "zod";
export declare const isChatEvent: z.ZodObject<{
    message: z.ZodString;
    author: z.ZodString;
}, "strip", z.ZodTypeAny, {
    message: string;
    author: string;
}, {
    message: string;
    author: string;
}>;
export declare enum ChatMessageTypes {
    text = 1,
    me = 2,
    userIncoming = 3,
    userOutcoming = 4,
    userWriting = 5,
    userStopWriting = 6
}
export declare const isChatMessageTypes: z.ZodNativeEnum<typeof ChatMessageTypes>;
export declare const isChatMessage: z.ZodObject<{
    type: z.ZodNativeEnum<typeof ChatMessageTypes>;
    date: z.ZodDate;
    author: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    targets: z.ZodOptional<z.ZodNullable<z.ZodArray<z.ZodNullable<z.ZodString>, "many">>>;
    text: z.ZodOptional<z.ZodNullable<z.ZodArray<z.ZodNullable<z.ZodString>, "many">>>;
}, "strip", z.ZodTypeAny, {
    author?: string | null | undefined;
    text?: (string | null)[] | null | undefined;
    targets?: (string | null)[] | null | undefined;
    type: ChatMessageTypes;
    date: Date;
}, {
    author?: string | null | undefined;
    text?: (string | null)[] | null | undefined;
    targets?: (string | null)[] | null | undefined;
    type: ChatMessageTypes;
    date: Date;
}>;
export declare type ChatMessage = z.infer<typeof isChatMessage>;
/**
 * A message sent from the iFrame to the game to add a message in the chat.
 */
export declare type ChatEvent = z.infer<typeof isChatEvent>;
