import { z } from "zod";
export declare const isJoinProximityMeetingEvent: z.ZodObject<{
    users: z.ZodArray<z.ZodObject<{
        playerId: z.ZodNumber;
        name: z.ZodString;
        userUuid: z.ZodString;
        availabilityStatus: z.ZodString;
        outlineColor: z.ZodOptional<z.ZodNumber>;
        position: z.ZodObject<{
            x: z.ZodNumber;
            y: z.ZodNumber;
        }, "strip", z.ZodTypeAny, {
            x: number;
            y: number;
        }, {
            x: number;
            y: number;
        }>;
        variables: z.ZodMap<z.ZodString, z.ZodUnknown>;
    }, "strip", z.ZodTypeAny, {
        outlineColor?: number | undefined;
        position: {
            x: number;
            y: number;
        };
        name: string;
        playerId: number;
        variables: Map<string, unknown>;
        userUuid: string;
        availabilityStatus: string;
    }, {
        outlineColor?: number | undefined;
        position: {
            x: number;
            y: number;
        };
        name: string;
        playerId: number;
        variables: Map<string, unknown>;
        userUuid: string;
        availabilityStatus: string;
    }>, "many">;
}, "strip", z.ZodTypeAny, {
    users: {
        outlineColor?: number | undefined;
        position: {
            x: number;
            y: number;
        };
        name: string;
        playerId: number;
        variables: Map<string, unknown>;
        userUuid: string;
        availabilityStatus: string;
    }[];
}, {
    users: {
        outlineColor?: number | undefined;
        position: {
            x: number;
            y: number;
        };
        name: string;
        playerId: number;
        variables: Map<string, unknown>;
        userUuid: string;
        availabilityStatus: string;
    }[];
}>;
export declare type JoinProximityMeetingEvent = z.infer<typeof isJoinProximityMeetingEvent>;
